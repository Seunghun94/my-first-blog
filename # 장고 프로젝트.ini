# 장고 프로젝트
# 1. mkdir test - 폴더생성
# 2. python -m venv ksh - 가상환경 생성(이름:ksh)
# 3. ksh\Scripts\activate - 가상환경 실행 (에러날 경우 : 관리자 권한으로 실행하면됌)
# 4. python -m pip install --upgrade pip   - 장고 설치전 pip 최선버전 업그레이드
# 5. pip install django~=2.0.0  -장고설치
# 6. django-admin.py startproject mysite . (django-admin.py있는 폴더에서 실행되니 옮겨서 실행)
# 7. 설정변경
#    - settings.py : TIME_ZONE -> Asia/Seoul
#    - STATIC_ROOT = os.path.join(BASE_DIR, 'static') 맨밑줄에 추가 
#    - ALLOWED_HOSTS = ['127.0.0.1', 'pythonanywhere.com'] 이건 애플리케이션 배포할때 호스트 이름과 일치하지 않으면 설정 변경
# 8. 데이터베이스 설정
#  - mysite/settings.py 안에 DATABASES가 있음 
#  - 콘솔창에 코드 입력 : python manage.py migrate 
# 9. 웹서버 실행 : python manage.py runserver
#  - 웹서버 종료 : 컨트롤 + C
# 10. 어플리케이션 만들기 (blog)
# python manage.py startapp blog 
# django에서 어플리케이션 인식하게 만들기 -> settings.py 안에 INSTALLED_APPS 리스트 안에 blog 추가
# 11. blog 글 모델 만들기
# 12. blog/models.py 모두 삭제 및 코드 추가
### 
; from django.conf import settings
; from django.db import models
; from django.utils import timezone


; class Post(models.Model): # 모델을 정의하는 코드  Post : 모델 명 (항상 첫글자는 대문자)
;     author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE) # 다른모델에 대한 링크의미
;     title = models.CharField(max_length=200) # 글자수 제한된 텍스트 (제목같은 짧은 문자열)
;     text = models.TextField() #글자 수 제한 없는 긴텍스트
;     created_date = models.DateTimeField( # 날짜와 시간을 의미
;             default=timezone.now)
;     published_date = models.DateTimeField(
;             blank=True, null=True)

;     def publish(self):
;         self.published_date = timezone.now()
;         self.save()

;     def __str__(self):
;         return self.title #리턴값으로 제목반환
###
#
# 13. 데이터 베이스에 생성한 모델 추가 
# 14. python manage.py makemigrations blog
# 15. python manage.py migrate blog 
# 16. 장고 관리자 화면 
# 17. 한국어 설정 - settings.py 에서 LANGUAGE_CODE = 'en-us'를 'ko'로 변경
# 18. 모델들 관리 
# 19. blog/admin.py 변경
#####
; from django.contrib import admin
; from .models import Post

; admin.site.register(Post)  #관리자 페이지에서 만든 모델을 보기위한 모델 등록
#####
# 20. 관리자 페이지 슈퍼계정 생성 
# 21. python manage.py runserver
# - url맨뒤에 /admin/ 추가
# 22. python manage.py createsuperuser
# 23. 이름, 이메일주소, 암호 입력 (소문자, 공백없이)
# 24. admin/ sh1021102@bgf.co.kr/ tmdgns13246!
# 25. 배포하기
# 26. Git 설치 -> git-scm.com
# 27. 설정 -> CMD 에서 경로 폴더로 옮긴뒤 git init -> git config --global user.name "Your Name" ->  git config --global user.email you@example.com
# 28. 특정 파일들 변경점 무시하도록 설정 -> .gitignore 파일을 생성 
#####
; *.pyc
; *~
; __pycache__
; myvenv
; db.sqlite3
; /static
; .DS_Store
######
# 29. git add 하기전 변경 된것 확인 -> git status 
# 30. 생성한 코드를 저장소에 넣기  CMD
# 31. git add -all.
# 32. git commit -m "My Django app, first commit"